#!/usr/bin/env bash

#incantation to our great lord and saviour, Lord Cthullu, so that He may bless
#the following lines of code to function properly with little to no problems :

#Iä! Iä! Cthulhu fhtagn! Ph'nglui mglw'nfah Cthulhu R'lyeh wgah'nagl fhtagn!

#-------------------------------------------------------------------------------

# THINGS TO DO :
#
#  1. post template
#  2. posting order [ sort by new, modified etc. ]
#  3. make several themes for different purposes. [ microblog, full blog, image
#     feed etc. ]
#  4. make the UI better. nobody wants to be writing at the current prompt.
#     link to editor.
#  5. clean up code, make it more readable, add more comments for the tricky \
#     bits
#  6. easy to manipulate configuration file. users don't have to mess with
#     css/html unless they want to.


#-------------------------------------------------------------------------------


#del is a funtion that accepts input from stdin and deletes all instances of the
#first arguement

del () {

  a=$(cat)
  echo "${a//$1/}"

}


#rep is a function that accepts input from stdin and replaces all instances of
#the first argument with the second argument

rep () {

  a=$(cat)
  echo "${a//$1/$2}"

}


#readr accepts input from stdin and returns the value of the field denoted by
#the first argument, assuming field:value type format to exist

readr () {

  piped_text=$(cat)
  echo "$piped_text" | grep "$1:" | del "$1:"

}


cd posts


#run publish on all md files

for file in $( ls *big.post.md )
  do

      echo "file:$file"
#getting TITLE, DATE and TIME values from file

    name=$( cat "$file" | readr NAME | rep "_" " " )
    pic=$( cat "$file" | readr PIC )
    link=$( cat "$file" | readr LINK )


#datetime is easier to sort as opposed to any other format, after removal of
#all punctuation


#stores file in content, gets rid of the lines where TITLE DATE and TIME are
#mentioned then deletes all occurences of multiple consecutive blank line,
#switches problematic characters with appropriate html escape codes
#and finally replaces the blank lines with the paragraph html tag

    content=$( cat $file |
    del "NAME:$name" |
    del "PIC:$pic" |
    del "LINK:$link" |
    rep "

" "
" |
    rep "
" "
    </p>
    <p>
    ")

#resolve markdown thing.
#create temporary directory .dir

    mkdir .dir
    t=$(echo $name | rep " " "-" )


#HTML stuff
#MAKE THIS PART A SEPARATE FILE : TEMPLATE.HTML

    echo "
    <div col=\"1/2\">
      <a href="$link">
        <card id=\"sponsor-card\">
          <h3>"$name"</h3>
          <img src="./sponsorlogos/$pic">
        </card>
      </a>
    </div>
    " > .dir/$name


#ALT [ for future consideration ] : cat post.head $content post.tail > $datetime

  done


#removing temporary file tmp if it exists prior to the execution of the script

rm ./tmp


#copying all post contents, in descending chronological order to temporary file tmp

for i in `ls .dir`
  do

    cat ".dir/$i" >> tmp

  done

content=$( cat ./tmp )


#writing content to index with template.

cat template.html | rep CONTENT1 "$content" | tee ../index1.html


#getting rid of the temporary files.

rm -rf .dir;
rm tmp
